generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        String  @id
  firstName String
  lastName  String?
  phone     String?
  country   String?
  email     String?
  password  String?
  Order     Order[]
}

model Hold {
  id        String   @id
  expiresIn DateTime
  Ticket    Ticket[]
}

model Match {
  id                 Int       @id @default(autoincrement())
  roundNumber        Int?
  Date               DateTime?
  location           String?
  homeTeam           String?   @default("TBD")
  homeTeamContinents String?
  awayTeam           String?   @default("TBD")
  awayTeamContinents String?
  group              String?
  homeTeamScore      Int?
  awayTeamScore      Int?
  rank               Int?
  Ticket             Ticket[]
}

model Order {
  id           String        @id
  orderDate    DateTime      @default(now())
  requiredDate DateTime?
  shipedDate   DateTime?
  status       String        @default("shipping")
  comments     String?
  price        Int?
  customerId   String
  Customer     Customer      @relation(fields: [customerId], references: [id])
  Reservation  Reservation[]
}

model Reservation {
  id        String @id
  orderId   String
  ticketsId String
  Order     Order  @relation(fields: [orderId], references: [id])
  Ticket    Ticket @relation(fields: [ticketsId], references: [id])
}

model Ticket {
  id          String        @id
  price       Int
  barcode     String?
  gateOpens   String
  category    String
  external    Boolean
  matchId     Int
  holdId      String?
  isHold      Boolean       @default(false)
  isPurchased Boolean       @default(false)
  Reservation Reservation[]
  Hold        Hold?         @relation(fields: [holdId], references: [id])
  Match       Match         @relation(fields: [matchId], references: [id])
}
